package com.analyticobjects.digitalsafe.ui;

import com.analyticobjects.digitalsafe.containers.DigitalSafe;
import com.analyticobjects.digitalsafe.containers.Note;
import com.analyticobjects.digitalsafe.containers.PasswordNote;
import com.analyticobjects.digitalsafe.exceptions.InvalidPassphraseException;
import com.analyticobjects.digitalsafe.exceptions.PassphraseExpiredException;
import com.analyticobjects.digitalsafe.res.ResourceLoader;
import com.analyticobjects.utility.LogUtility;
import java.awt.Component;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;

/**
 * Some 1980's style ui.
 *
 * @author Joel Bondurant
 * @since 2013.09
 */
public class MainFrame extends javax.swing.JFrame {

	private static MainFrame singletonInstance;
	private final DigitalSafe digitalSafe;
	private static final Level LOGGING_LEVEL = Level.ALL;

	/**
	 * Creates new form MainFrame
	 */
	private MainFrame() {
		this.digitalSafe = new DigitalSafe();
		LogUtility.setLoggingLevelGlobally(LOGGING_LEVEL);
		preInitComponents(); // lame structure needed due to short-cutting with automated form building...
		initComponents();
		postInitComponents();
		lock();
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				MainFrame.getInstance().setVisible(true);
			}
		});
	}

	public static synchronized MainFrame getInstance() {
		if (singletonInstance == null) {
			singletonInstance = new MainFrame();
		}
		return singletonInstance;
	}
	
	public DigitalSafe getDigitalSafe() {
		return this.digitalSafe;
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
	 * content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        tabbedPane1 = new javax.swing.JTabbedPane();
        notesPanel = new javax.swing.JPanel();
        passwordsPanel = new javax.swing.JPanel();
        picturesPanel = new javax.swing.JPanel();
        filesPanel = new javax.swing.JPanel();
        passphrasePanel = new javax.swing.JPanel();
        passphraseLabel = new javax.swing.JLabel();
        passphraseField = new javax.swing.JPasswordField();
        commandPanel = new javax.swing.JPanel();
        commandField = new javax.swing.JTextField();
        commandLabel = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DigitalSafe");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximumSize(new java.awt.Dimension(2000, 1000));
        setMinimumSize(new java.awt.Dimension(750, 600));
        setName("mainFrame"); // NOI18N
        setPreferredSize(new java.awt.Dimension(750, 600));

        titleLabel.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        titleLabel.setText("DigitalSafe");

        notesPanel.setLayout(new javax.swing.BoxLayout(notesPanel, javax.swing.BoxLayout.LINE_AXIS));
        tabbedPane1.addTab("Notes", notesPanel);
        notesPanel.getAccessibleContext().setAccessibleName("Notes");
        notesPanel.getAccessibleContext().setAccessibleDescription("");

        passwordsPanel.setLayout(new javax.swing.BoxLayout(passwordsPanel, javax.swing.BoxLayout.LINE_AXIS));
        tabbedPane1.addTab("Passwords", passwordsPanel);
        passwordsPanel.getAccessibleContext().setAccessibleName("Passwords");

        tabbedPane1.addTab("Pictures", picturesPanel);
        picturesPanel.getAccessibleContext().setAccessibleName("Pictures");

        tabbedPane1.addTab("Files", filesPanel);
        filesPanel.getAccessibleContext().setAccessibleName("Files");

        passphraseLabel.setText("Passphrase: ");

        passphraseField.setToolTipText("");
        passphraseField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passphraseFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout passphrasePanelLayout = new javax.swing.GroupLayout(passphrasePanel);
        passphrasePanel.setLayout(passphrasePanelLayout);
        passphrasePanelLayout.setHorizontalGroup(
            passphrasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(passphrasePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(passphraseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(passphraseField, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );
        passphrasePanelLayout.setVerticalGroup(
            passphrasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(passphrasePanelLayout.createSequentialGroup()
                .addGroup(passphrasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passphraseLabel)
                    .addComponent(passphraseField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 13, Short.MAX_VALUE))
        );

        commandField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commandFieldActionPerformed(evt);
            }
        });

        commandLabel.setText("Command Line:");

        javax.swing.GroupLayout commandPanelLayout = new javax.swing.GroupLayout(commandPanel);
        commandPanel.setLayout(commandPanelLayout);
        commandPanelLayout.setHorizontalGroup(
            commandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, commandPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(commandLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(commandField, javax.swing.GroupLayout.PREFERRED_SIZE, 615, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );
        commandPanelLayout.setVerticalGroup(
            commandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(commandPanelLayout.createSequentialGroup()
                .addGroup(commandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(commandLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(commandField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 9, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tabbedPane1)
                            .addComponent(commandPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addComponent(filler2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(titleLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(passphrasePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(passphrasePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(filler2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(336, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(commandPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tabbedPane1)
                        .addContainerGap())))
        );

        tabbedPane1.getAccessibleContext().setAccessibleName("Notes");

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void preInitComponents() {
		try {
			for (javax.swing.UIManager.LookAndFeelInfo laf : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(laf.getName())) {
					javax.swing.UIManager.setLookAndFeel(laf.getClassName());
					break;
				}
			}
			//javax.swing.UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
			//javax.swing.UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());
		} catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, ex.getLocalizedMessage(), ex);
		}
	}

	private void postInitComponents() {
		setIconImage(new ImageIcon(ResourceLoader.class.getResource("safe.png")).getImage());
	}

	public final void lock() {
		this.digitalSafe.lock();
		this.passphrasePanel.setVisible(true);
		this.tabbedPane1.setVisible(false);
		this.commandPanel.setVisible(false);
		this.revalidate();
		this.repaint();
	}

	public void unlock() {
		this.passphrasePanel.setVisible(false);
		this.tabbedPane1.setVisible(true);
		this.commandPanel.setVisible(true);
		this.revalidate();
		this.repaint();
	}

    private void passphraseFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passphraseFieldActionPerformed
		char[] passphraseChars = this.passphraseField.getPassword();
		if (passphraseChars.length < 6) {
			return;
		}
		this.passphraseField.setText("");
		try {
			this.digitalSafe.setPassphrase(new String(passphraseChars));
			unlock();
		} catch (InvalidPassphraseException ex) {
			Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, ex.getLocalizedMessage(), ex);
		}
    }//GEN-LAST:event_passphraseFieldActionPerformed

    private void commandFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commandFieldActionPerformed
		String command = this.commandField.getText().trim();
		String contextString = this.tabbedPane1.getTitleAt(this.tabbedPane1.getSelectedIndex());
		Context context = Context.valueOf(contextString);
		this.commandField.setText("");
		if (!digitalSafe.isLocked()) { //executing commands on a locked safe will just throw exceptions.
			try {
				Commands.execute(command, context);
			} catch (PassphraseExpiredException ex) {
				Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, ex.getLocalizedMessage(), ex);
				this.passphrasePanel.setVisible(true);
			}
		} else {
			this.passphrasePanel.setVisible(true);
		}
    }//GEN-LAST:event_commandFieldActionPerformed

	synchronized void setFilesPanel(ListPanel listPanel) {
		this.filesPanel.removeAll();
		if (listPanel != null) {
			listPanel.setVisible(true);
			this.filesPanel.add(listPanel);
		}
		this.filesPanel.revalidate();
		this.filesPanel.repaint();
	}

	synchronized void setNotesPanel(NotePanel notePanel) {
		this.notesPanel.removeAll();
		if (notePanel != null) {
			notePanel.setVisible(true);
			this.notesPanel.add(notePanel);
		}
		this.notesPanel.revalidate();
		this.notesPanel.repaint();
	}

	Note getNoteFromNotePanel() {
		Component component = this.notesPanel.getComponent(0);
		if (component instanceof NotePanel) {
			NotePanel notePanel = (NotePanel) component;
			return notePanel.toNote();
		}
		return null;
	}

	synchronized void setPasswordNotesPanel(PasswordNotePanel passwordNotePanel) {
		this.passwordsPanel.removeAll();
		if (passwordNotePanel != null) {
			passwordNotePanel.setVisible(true);
			this.passwordsPanel.add(passwordNotePanel);
		}
		this.passwordsPanel.revalidate();
		this.passwordsPanel.repaint();
	}

	PasswordNote getPasswordNoteFromPasswordNotePanel() {
		Component component = this.passwordsPanel.getComponent(0);
		if (component instanceof PasswordNotePanel) {
			PasswordNotePanel passwordNotePanel = (PasswordNotePanel) component;
			return passwordNotePanel.toPasswordNote();
		}
		return null;
	}

	public enum Context {

		Notes, Passwords, Pictures, Files
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField commandField;
    private javax.swing.JLabel commandLabel;
    private javax.swing.JPanel commandPanel;
    private javax.swing.JPanel filesPanel;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel notesPanel;
    private javax.swing.JPasswordField passphraseField;
    private javax.swing.JLabel passphraseLabel;
    private javax.swing.JPanel passphrasePanel;
    private javax.swing.JPanel passwordsPanel;
    private javax.swing.JPanel picturesPanel;
    private javax.swing.JTabbedPane tabbedPane1;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
